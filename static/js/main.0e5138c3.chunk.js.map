{"version":3,"sources":["utils/API.js","components/SearchBar.js","components/VideoDetail.js","components/VideoList.js","App.js","index.js"],"names":["API","searchYouTube","term","axios","get","params","part","q","type","key","FormWrapper","styled","FormGroup","_templateObject","SearchBar","state","handleInputChange","_ref","target","_this","setState","value","props","_this2","this","react_default","a","createElement","Form","onSubmit","event","preventDefault","Label","for","hidden","Input","name","id","placeholder","onChange","onClick","Component","VideoDetail","selectedVideo","videoId","videoUrl","concat","react","className","title","snippet","src","allowFullScreen","description","List","ul","VideoList_templateObject","ListItem","li","_templateObject2","active","VideoList","children","VideoListItem","_ref2","video","onVideoSelect","thumbnails","medium","url","alt","App","videos","then","res","data","items","catch","err","console","log","throttledSearch","_","debounce","Container","Row","Col","components_SearchBar","md","components_VideoDetail","VideoList_VideoList","map","VideoList_VideoListItem","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.0e5138c3.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiKey = 'AIzaSyA_cZKZMcBG0lfkZx8X97O5GynHc308hVY';\n\nexport default {\n  searchYouTube: term => {\n    return axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\n      params: {\n        part: 'snippet',\n        q: term,\n        type: 'video',\n        key: apiKey,\n      }\n    })\n  }\n}","import React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport styled from 'styled-components';\n\nconst FormWrapper = styled(FormGroup)`\n  position: relative;\n  span {\n    color: red;\n    font-weight: 700;\n    font-size: 24px;\n    position: absolute;\n    right: 10px;\n    top: -2px;\n    :hover {\n      color: darkred;\n      cursor: pointer;\n    }\n  }\n`\n\nclass SearchBar extends Component {\n  state = {\n    term: ''\n  }\n\n  handleInputChange = ({ target }) => {\n    this.setState({ term: target.value }, () => {\n      this.props.searchYouTube(this.state.term);\n    })\n  }\n\n  render() {\n    return (\n      <Form onSubmit={event => event.preventDefault()}>\n          <FormWrapper>\n            <Label for=\"youtubeSearch\" hidden>YouTube Search</Label>\n            <Input \n              type=\"text\" \n              name=\"youtubeSearch\" \n              id=\"youtubeSearch\" \n              placeholder=\"Search\" \n              value={this.state.term}\n              onChange={this.handleInputChange}\n            />\n            <span\n              onClick={() => this.setState({ term: '' })}\n            >X</span>\n          </FormWrapper>\n      </Form>\n    )\n  }\n}\n\nexport default SearchBar;","import React, { Fragment } from 'react';\n\nconst VideoDetail = ({ selectedVideo }) => {\n  if (!selectedVideo) return <h2>Loading</h2>;\n  \n  const videoId = selectedVideo.id.videoId;\n  const videoUrl = `https://www.youtube.com/embed/${videoId}?rel=0`;\n  \n  return (\n    <Fragment>\n      <div className=\"embed-responsive embed-responsive-16by9\">\n        <iframe \n          title={selectedVideo.snippet.title}\n          src={videoUrl} \n          className=\"embed-responsive-item\" \n          allowFullScreen\n        ></iframe>\n      </div>\n      <div>\n        <h2>{selectedVideo.snippet.title}</h2>\n        <h4>{selectedVideo.snippet.description}</h4>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default VideoDetail;","import React from 'react';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n`\nconst ListItem = styled.li`\n  margin-bottom: 1em;\n  text-align: right;\n  img {\n    border: ${props => props.active ? '5px solid red' : '2px solid gray'};\n    border-radius: 10px;\n    cursor: pointer;\n    &:hover {\n      border-color: red;\n    }\n  }\n`\n\nconst VideoList = ({ children }) => {\n  return (\n    <List>{children}</List>\n  )\n}\n\nconst VideoListItem = ({ video, selectedVideo, onVideoSelect }) => {\n  return (\n    <ListItem \n      active={video === selectedVideo}\n      onClick={() => onVideoSelect(video)}\n    >\n      <img \n        src={video.snippet.thumbnails.medium.url}\n        alt={video.snippet.title}\n      />\n    </ListItem>\n  )\n}\n\nexport { VideoList, VideoListItem };","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport _ from 'lodash';\nimport API from './utils/API';\nimport SearchBar from './components/SearchBar';\nimport VideoDetail from './components/VideoDetail';\nimport { VideoList, VideoListItem } from './components/VideoList';\n\nclass App extends Component {\n  state = {\n    videos: [],\n    selectedVideo: null,\n  }\n\n  componentDidMount() {\n    this.searchYouTube('Kittens in mittens');\n  }\n\n  onVideoSelect = selectedVideo => {\n    this.setState({ selectedVideo })\n  }\n\n  searchYouTube = term => {\n    API.searchYouTube(term)\n    .then(res => this.setState({\n      videos: res.data.items,\n      selectedVideo: res.data.items[0],\n    }))\n    .catch(err => console.log(err));    \n  }\n\n  throttledSearch = _.debounce(this.searchYouTube, 600);\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1>Debounce search</h1>\n            <SearchBar\n              searchYouTube={this.throttledSearch}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col md='8'>\n            <VideoDetail \n              selectedVideo={this.state.selectedVideo}\n            />\n          </Col>\n          <Col md='4'>\n            <VideoList>\n              {this.state.videos.map(video => (\n                <VideoListItem \n                  key={video.id.videoId}\n                  video={video}\n                  selectedVideo={this.state.selectedVideo}\n                  onVideoSelect={this.onVideoSelect}\n                />\n              ))}\n            </VideoList>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}